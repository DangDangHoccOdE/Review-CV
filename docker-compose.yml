services:
  discovery-server:
    build: ./discovery-server
    container_name: discovery-server
    ports:
      - "8671:8671"
    environment:
      SPRING_PROFILES_ACTIVE: default
      SERVER_PORT: 8671
      EUREKA_CLIENT_REGISTERWITH_EUREKA: "false"
      EUREKA_CLIENT_FETCHREGISTRY: "false"
    networks:
      - spring-network

  mysql-image:
    image: mysql:8.0
    container_name: mysql-image-service
    restart: always
    environment:
      MYSQL_DATABASE: image
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: Dang972004@
    ports:
      - "3311:3306"
    volumes:
      - mysql_image_data:/var/lib/mysql
    networks:
      - spring-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql-notification:
    image: mysql:8.0
    container_name: mysql-notification
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Dang972004@
      MYSQL_DATABASE: notification
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3310:3306"
    volumes:
      - mysql_notification_data:/var/lib/mysql
    networks:
      - spring-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql-project:
    image: mysql:8.0
    container_name: mysql-project
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Dang972004@
      MYSQL_DATABASE: project
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3312:3306"
    volumes:
      - mysql_project_data:/var/lib/mysql
    networks:
      - spring-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql-portfolio:
    image: mysql:8.0
    container_name: mysql-portfolio
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Dang972004@
      MYSQL_DATABASE: portfolio
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_portfolio_data:/var/lib/mysql
    networks:
      - spring-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: always
    networks:
      - spring-network
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - spring-network

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - spring-network

  image-service:
    build: ./image-service
    container_name: image-service
    restart: always
    depends_on:
      mysql-image:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      SPRING_APPLICATION_NAME: image-service
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-image-service:3306/image
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Dang972004@
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SERVER_PORT: 8083
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8671/eureka
      CLOUDINARY_CLOUD_NAME: dhv7v0enl
      CLOUDINARY_API_KEY: 321888329748168
      CLOUDINARY_API_SECRET: tJYJsxpU4KbSNEjJju49n_06l3c
    networks:
      - spring-network

  notification-service:
    build: ./notification-service
    container_name: notification-service
    restart: always
    depends_on:
      mysql-notification:
        condition: service_healthy
      kafka:
        condition: service_started
    ports:
      - "8084:8084"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-notification:3306/notification
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Dang972004@
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8671/eureka
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - spring-network

  manager-service:
    build: ./manager-service
    container_name: manager-service
    restart: always
    depends_on:
      mongodb:
        condition: service_healthy
    ports:
      - "8091:8091"
    environment:
      SPRING_APPLICATION_NAME: manager-service
      SERVER_PORT: 8091
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/portfolio
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8671/eureka
    networks:
      - spring-network

  profile-service:
    build: ./profile-service
    container_name: profile-service
    restart: always
    depends_on:
      mongodb:
        condition: service_healthy
    ports:
      - "8085:8085"
    environment:
      SPRING_APPLICATION_NAME: profile-service
      SERVER_PORT: 8085
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/portfolio
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8671/eureka
    networks:
      - spring-network

  project-service:
    build: ./project-service
    container_name: project-service
    restart: always
    depends_on:
      mysql-project:
        condition: service_healthy
    ports:
      - "8086:8086"
    environment:
      SPRING_APPLICATION_NAME: project-service
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-project:3306/project
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SERVER_PORT: 8086
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8671/eureka
    networks:
      - spring-network

  user-service:
    build: ./user-service
    container_name: user-service
    restart: always
    depends_on:
      mysql-portfolio:
        condition: service_healthy
    ports:
      - "8088:8088"
    environment:
      SPRING_APPLICATION_NAME: user-service
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-portfolio:3306/portfolio
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Dang972004@
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SERVER_PORT: 8088
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8671/eureka
    networks:
      - spring-network

  email-service:
    build: ./email-service
    container_name: email-service
    restart: always
    ports:
      - "8087:8087"
    environment:
      SPRING_APPLICATION_NAME: email-service
      SERVER_PORT: 8087
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: danghoangtest1@gmail.com
      SPRING_MAIL_PASSWORD: rnsmddbxngmybmat
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "true"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "true"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_REQUIRED: "true"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8671/eureka
    networks:
      - spring-network

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    restart: always
    depends_on:
      - discovery-server
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_NAME: api-gateway
      SERVER_PORT: 8080
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8671/eureka
    networks:
      - spring-network

networks:
  spring-network:

volumes:
  mysql_image_data:
  mysql_notification_data:
  mysql_project_data:
  mysql_portfolio_data:
  mongodb_data:
